name: create_release_on_tag
on:
  push:
    tags:
      - '*'
env:
  BUILD_NAME: Kifu\ Viewer.app
  ZIP_NAME: kifu_viewer.zip
jobs:
  # deploy:
  #   name: Deploy app
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-java@v1
  #       with:
  #         java-version: '12.x'
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         channel: 'dev'
  #     - name: Determine App Version
  #       run: echo "APP_VERSION=$(grep '^version:' pubspec.yaml | awk '{ print $2 }' | cut -d '+' -f 1)" >> $GITHUB_ENV
  #     - name: Install packages
  #       run:
  #         flutter pub get
  #     - name: Enable macOS Support
  #       run:
  #         flutter config --enable-macos-desktop
  #     - name: Build macOS
  #       run:
  #         flutter build macos --release
  #     - name: Zip build
  #       run: |
  #           cd build/macos/Build/Products/Release/
  #           zip -r ${{ env.ZIP_NAME }} ${{ env.BUILD_NAME }}
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ env.APP_VERSION }}
  #         release_name: ${{ env.APP_VERSION }}
  #         draft: false
  #         prerelease: false
  #     - name: Upload Release Asset
  #       id: upload-release-asset 
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
  #         asset_path: build/macos/Build/Products/Release/${{ env.ZIP_NAME }}
  #         asset_name: ${{ env.ZIP_NAME }}
  #         asset_content_type: application/zip
  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'dev'
      - name: Install packages
        run:
          flutter pub get
      - name: Enable Linux Support
        run:
          flutter config --enable-linux-desktop
      - name: Install dependencies for Linux
        run: |
          sudo apt install clang
          sudo apt install ninja-build
          sudo apt install libgtk-3-dev
          sudo apt install libblkid-dev
      - name: Build Linux
        run:
          flutter build linux --release
      - name: Zip build
        run: |
            cd build/linux/release/bundle
            zip -r ${{ env.ZIP_NAME }} ${{ env.BUILD_NAME }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: build/macos/Build/Products/Release/${{ env.ZIP_NAME }}
          asset_name: ${{ env.ZIP_NAME }}
          asset_content_type: application/zip
